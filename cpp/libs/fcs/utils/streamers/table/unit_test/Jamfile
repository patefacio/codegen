import os ;
project fcs_utils_streamers_table_unit_tests
    :
    :
    ;

ENV_CXXFLAGS = [ os.environ CXXFLAGS ] ;
ENV_LINKFLAGS = [ os.environ LINKFLAGS ] ;

ADDITIONAL_SRC =

# custom <additional src>
# end <additional src>
;

ADDITIONAL_REQUIREMENTS =

# custom <additional requirements>
# end <additional requirements>
;

import testing ;

rule test_fcs_utils_streamers_table
{
   for local fileb in [ glob *.cpp ]
   {
      all_rules += [ run $(fileb) 
         $(ADDITIONAL_SRC)
         $(PANTHEIOS_LIBS)
      :  # additional args
      :  # test-files
      :  # requirements
         <cxxflags>$(ENV_CXXFLAGS)
         <linkflags>$(ENV_LINKFLAGS)
         $(ADDITIONAL_REQUIREMENTS)
         <toolset>msvc:<asynch-exceptions>on         
         <debug-symbols>on
      ] ;
   }
}

test-suite fcs_utils_streamers_table_test_suite : [ test_fcs_utils_streamers_table ] ;
explicit fcs_utils_streamers_table_test_suite ;

# Targets to build unit tests that stay around for debugging
exe table_unit_test :
         test_table.cpp
         $(ADDITIONAL_SRC)
         $(PANTHEIOS_LIBS)
      :  # additional args
         <cxxflags>$(ENV_CXXFLAGS)
         <linkflags>$(ENV_LINKFLAGS)
         $(ADDITIONAL_REQUIREMENTS)
         <define>RUN_NON_BOOST_UNIT_TEST
         # <linkflags>-Xlinker --Map=table_unit_test.map
         # <define>DEBUG_FCS_STARTUP
      :  # test-files
      :  # requirements
;
explicit table_unit_test ;



alias fcs_utils_streamers_table_unit_tests :
   table_unit_test
  ;

explicit fcs_utils_streamers_table_unit_tests ;


