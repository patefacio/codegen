library #{@lib.name};

<?rb @lib.imports.each do |imp| ?>
<?rb if imp=~/(.*)\s+as\s+(.*)/ ?>
import "#{$1}" as #{$2};
<?rb else ?>
import "#{imp}";
<?rb end ?>
<?rb end ?>
<?rb @lib.parts.each do |part| ?>
part "src/#{@lib.name}/#{part.id}.dart";
<?rb end ?>
<?rb if not @lib.public_typedefs.empty? ?>

<?rb @lib.public_typedefs.each do |src,target| ?>
typedef #{src} #{target};
<?rb end ?>
<?rb end ?>
<?rb if not @lib.public_constants.empty? ?>

<?rb @lib.public_constants.each do |t,n,val| ?>
const #{t} #{n} = #{val};
<?rb end ?>
<?rb end ?>
<?rb @lib.public_finals.each do |t,n,val| ?>
final #{t} #{n} = #{val};
<?rb end ?>
<?rb if not @lib.generated.empty? ?>

#{@lib.generated.join(Codegen::NL)}
<?rb end ?>

main() { 
  print("Main for lib #{@lib.id}");
<?rb if @lib.json_sample_test ?>
  _testRandomSampleData(_randomJsonSample);
<?rb end ?>
<?rb if not @lib.generated_main.empty? ?>

#{@lib.generated_main.join(Codegen::NL)}
<?rb end ?>
#{Codegen.protect_block("#{@lib.id} main")}
}

#{Codegen.protect_block("#{@lib.id} lib top level")}

